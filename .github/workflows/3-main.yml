---
name: Main

'on':
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - main
    tags-ignore:
      - '**'

jobs:
  ansible-linter:
    name: Ansible Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install ansible-lint Dependencies
        run: pip3 install ansible ansible-base ansible-lint

      - name: Lint Code Base with ansible-lint
        run: ansible-lint

  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.3

  yaml-linter:
    name: YAML Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install yamllint Dependencies
        run: pip3 install yamllint

      - name: Lint Code Base with yamllint
        run: yamllint .

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        MOLECULE_DISTRO:
          - ubuntu1804
          - ubuntu2004
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Molecule Dependencies
        run: pip install -r requirements.txt

      - name: Run Molecule Tests
        run: molecule test --all
        env:
          PY_COLORS: 1
          ANSIBLE_FORCE_COLOR: 1
          MOLECULE_DISTRO: ${{ matrix.MOLECULE_DISTRO }}

  release:
    name: Release
    if: ${{ github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    needs:
      - ansible-linter
      - pre-commit
      - yaml-linter
      - molecule
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create a new tag
        uses: phish108/autotag-action@1.1.37
        id: autotag
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a new release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.autotag.outputs.new-tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install ansible-base
        run: pip3 install ansible-base

      - name: Trigger a new import on Galaxy
        run: >-
          ansible-galaxy role import
          --token "${{ secrets.GALAXY_API_KEY }}"
          --branch main
          "$(echo ${{ github.repository }} | cut -d/ -f1)"
          "$(echo ${{ github.repository }} | cut -d/ -f2)"

  playbook:
    name: Trigger Playbook Repo
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: Trigger gepaplexx/playbook-nginx
        run: >-
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT}}"
          -H "Accept: application/vnd.github.everest-preview+json"
          -H "Content-Type: application/json"
          https://api.github.com/repos/gepaplexx/playbook-nginx/dispatches
          --data '{"event_type": "New ansible role version: nginx"}'

  notify:
    name: Slack Notifications
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    needs:
      - playbook
    steps:
      - name: Notify Slack channel on failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://github.com/ckaserer/logos/raw/master/ansible.png
          SLACK_USERNAME: ${{ github.repository }}
          SLACK_COLOR: '#ff0033'
          SLACK_FOOTER: ''
...
