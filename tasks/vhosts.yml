---
- name: Remove default nginx vhost config file (if configured).
  ansible.builtin.file:
    path: "{{ nginx_default_vhost_path }}"
    state: absent
  when: nginx_remove_default_vhost | bool
  notify: restart nginx

- name: Ensure nginx_vhost_path exists.
  ansible.builtin.file:
    path: "{{ nginx_vhost_path }}"
    state: directory
    mode: 0755
  notify: reload nginx

- name: Add managed vhost config files.
  ansible.builtin.template:
    src: "{{ nginx_vhost.template|default(nginx_vhost_template) }}"
    # yamllint disable rule:line-length
    dest: "{{ nginx_vhost_path }}/{{ nginx_vhost.filename|default(nginx_vhost.server_name.split(' ')[0] ~ '.conf') }}"
    # yamllint enable rule:line-length
    force: true
    owner: root
    group: "{{ nginx_root_group }}"
    mode: 0644
  when: nginx_vhost.state|default('present') != 'absent'
  with_items: "{{ nginx_vhosts }}"
  loop_control:
    loop_var: nginx_vhost
    label: "{{ nginx_vhost.server_name }}"
  notify: reload nginx
  tags:
    - skip_ansible_lint

- name: Remove managed vhost config files.
  ansible.builtin.file:
    # yamllint disable rule:line-length
    path: "{{ nginx_vhost_path }}/{{ nginx_vhost.filename|default(nginx_vhost.server_name.split(' ')[0] ~ '.conf') }}"
    # yamllint enable rule:line-length
    state: absent
  when: nginx_vhost.state|default('present') == 'absent'
  with_items: "{{ nginx_vhosts }}"
  loop_control:
    loop_var: nginx_vhost
    label: "{{ nginx_vhost.server_name }}"
  notify: reload nginx
  tags:
    - skip_ansible_lint

- name: Remove legacy vhosts.conf file.
  ansible.builtin.file:
    path: "{{ nginx_vhost_path }}/vhosts.conf"
    state: absent
  notify: reload nginx
...
